about:
  name: wFiles
  description: >-
    Collection of classes to abstract files systems. Many interfaces provide
    files, but not called as file systems and treated differently. For example
    server-side gives access to local files and browser-side HTTP/HTTPS protocol
    gives access to files as well, but in the very different way, it does the
    first. This problem forces a developer to break fundamental programming
    principle DRY and make code written to solve a problem not applicable to the
    same problem, on another platform/technology. Files treats any
    file-system-like interface as files system. Files combines all files
    available to the application into the single namespace where each file has
    unique Path/URI, so that operating with several files on different files
    systems is not what user of the module should worry about. If Files does not
    have an adapter for your files system you may design it providing a short
    list of stupid methods fulfilling completely or partly good defined API and
    get access to all sophisticated general algorithms on files for free. Is
    concept of file applicable to external entities of an application? Files
    makes possible to treat internals of a program as files system(s). Use the
    module to keep DRY.
  version: 0.7.0
  enabled: 1
  license: MIT
  npm.name: wFiles
  author: Kostiantyn Wandalen <wanalen@01.school>
  keywords:
    - wTools
    - wFiles
    - file
    - standardized abstract interface
  contributors:
    - Kostiantyn Wandalen <wanalen@01.school>
    - Volodymyr M. <volodymyr.migdal@gmail.com>
    - Ihor O. <iostashvxi@gmail.com>
    - Dmytro Kryvoruchko <dm.vict.kr@gmail.com>
  interpreters:
    - njs >= 10.0.0
    - chrome >= 60.0.0
    - firefox >= 60.0.0
  npm.scripts:
    test: wtest .run "proto/**" rapidity:-3
    test2: >-
      wtest .run proto/**/wtools/amid/file.test/Provider.HardDrive.test.ss
      routine : linkHardSyncRunner
    test3: >-
      wtest .run proto/**/wtools/amid/file.test/Provider.HardDrive.test.ss
      routine : linkHardAsyncRunner
    docgen: wdocgen .build proto
build:
  proto.export:
    criterion:
      content: proto
      export: 1
    steps:
      - 'step::proto.export'
  doc.export:
    criterion:
      content: doc
      export: 1
    steps:
      - 'step::doc.export'
  npm.export:
    criterion:
      content: npm
      export: 1
    steps:
      - 'step::npm.publish'
  export:
    criterion:
      default: 1
      export: 1
    steps:
      - 'build::proto.export'
  debug:
    criterion:
      default: 1
      debug: debug
      raw: raw
      content: prime
    steps:
      - 'step::clean.out*=2'
      - reflect.proto.*=1
  compiled.debug:
    criterion:
      debug: debug
      raw: compiled
      content: prime
    steps:
      - 'step::clean.out*=2'
      - transpile.proto.no.tests*=1
      - transpile.proto.only.tests*=1
  raw.release:
    criterion:
      debug: release
      raw: raw
      content: prime
    steps:
      - 'step::clean.out*=2'
      - transpile.proto.raw
  release:
    criterion:
      debug: release
      raw: compiled
      content: prime
    steps:
      - 'step::clean.out*=2'
      - transpile.proto.no.tests*=1
      - transpile.proto.only.tests*=1
  npm:
    criterion:
      debug: debug
      raw: raw
      content: npm
    steps:
      - npm.generate.*=1
  all:
    steps:
      - 'build::debug'
      - 'build::compiled.debug'
      - 'build::raw.release'
      - 'build::release'
      - 'build::npm'
path:
  repository: 'git+https:///github.com/Wandalen/wFiles.git'
  origins:
    - 'git+https:///github.com/Wandalen/wFiles.git'
    - 'npm:///wFiles'
  bugtracker: 'https:///github.com/Wandalen/wFiles/issues'
  in: .
  out: out
  temp:
    - 'path::out'
    - package-lock.json
    - package.json
    - node_modules
  proto: ./proto
  export: '{path::proto}/**'
  doc: ./doc
  out.raw.debug:
    path: '{path::out}/debug'
    criterion:
      debug: debug
      raw: raw
      content: prime
  out.compiled.debug:
    path: '{path::out}/compiled.debug'
    criterion:
      debug: debug
      raw: compiled
      content: prime
  out.raw.release:
    path: '{path::out}/raw.release'
    criterion:
      debug: release
      raw: raw
      content: prime
  out.compiled.release:
    path: '{path::out}/release'
    criterion:
      debug: release
      raw: compiled
      content: prime
  entry.proto.no.tests:
    path: proto/wtools/amid/l4_files/entry/Files.s
    criterion:
      tests: no.tests
  entry.proto.only.tests:
    path: proto/**/*.test.s
    criterion:
      tests: only.tests
  entry.out.raw.debug:
    path: '{path::out.*=1}/source/wtools/amid/l4_files/entry/Files.s'
    criterion:
      debug:
        - debug
        - release
      raw: raw
      content: prime
  entry.out.compiled.debug:
    path: '{path::out.*=}/source/Index.s'
    criterion:
      debug:
        - debug
        - release
      raw: compiled
      content: prime
  npm.proto.entry:
    - proto/wtools/amid/l4_files/entry/Files.s
    - proto/node_modules/wFiles
reflector:
  reflect.proto:
    inherit: predefined.*
    criterion:
      tests: no.tests
      debug:
        - debug
        - release
      raw:
        - raw
        - compiled
      content: prime
    filePath:
      'path::proto': '{path::out.*=1}/source'
  transpile.proto.raw:
    inherit: predefined.*
    step:
      inherit: files.transpile
      entry: 'path::entry.proto.no.tests'
    criterion:
      raw: raw
      debug: release
      content: prime
    filePath:
      'path::proto': '{path::out.raw.release}'
  transpile.proto.no.tests.compiled:
    inherit: predefined.*
    step:
      inherit: files.transpile
      entry: 'path::entry.proto.*=1'
    criterion:
      tests: no.tests
      raw: compiled
      debug:
        - debug
        - release
      content: prime
    filePath:
      '**.test*': 0
      '**.test/**': 0
      'path::proto': '{path::out.*=1}/Main.s'
  transpile.proto.only.tests.compiled:
    inherit: predefined.*
    step:
      inherit: files.transpile
      entry: 'path::entry.proto.*=1'
      external.before: '{path::out.*=1}/Main.s'
    criterion:
      tests: only.tests
      raw: compiled
      debug:
        - debug
        - release
      content: prime
    filePath:
      '**.test*': 1
      'path::proto': '{path::out.*=1}/Tests.test.s'
step:
  proto.export:
    inherit: module.export
    export: 'path::export'
    tar: 0
    criterion:
      content: proto
  doc.export:
    inherit: module.export
    export: 'path::doc'
    tar: 0
    criterion:
      content: doc
  npm.export:
    inherit: module.export
    export: out.npm
    tar: 0
    criterion:
      content: npm
  npm.publish:
    shell: npm publish
  npm.generate:
    inherit: npm.generate
    entryPath: 'path::entry.out.*=1'
    packagePath: '{path::out.*=1}/package.json'
    filesPath: '{path::out.*=1}/source/**'
    criterion:
      debug:
        - debug
        - release
      raw:
        - raw
        - compiled
  clean.out:
    inherit: files.delete
    filePath: '{path::out.*=1}/source'
    criterion:
      debug:
        - debug
        - release
      raw:
        - raw
        - compiled
      tests:
        - no.tests
        - only.tests
      content:
        - prime
        - npm
  clean.out.npm:
    inherit: files.delete
    filePath: 'path::out.*=1'
    criterion:
      debug: debug
      raw: compiled
      tests: no.tests
      content: npm
  tst.proto:
    shell: 'tst {path::proto}'
    criterion:
      content: proto
  tst.debug:
    shell: 'tst {path::out.*=1}'
    criterion:
      content: prime
      debug: debug
  tst.release:
    shell: 'tst {path::out.*=1}'
    criterion:
      content: prime
      debug: release
submodule:
  wTools:
    path: 'npm:///wTools'
    enabled: 0
  wfilesbasic:
    path: 'npm:///wfilesbasic'
    enabled: 0
  wfileshttp:
    path: 'npm:///wfileshttp'
    enabled: 0
  wfilesnpm:
    path: 'npm:///wfilesnpm'
    enabled: 0
  wfilesgit:
    path: 'npm:///wfilesgit'
    enabled: 0
  eslint:
    path: 'npm:///eslint#7.1.0'
    enabled: 0
    criterion:
      development: 1
  wTesting:
    path: 'npm:///wTesting'
    enabled: 0
    criterion:
      development: 1
